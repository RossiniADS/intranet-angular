// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using intranet_angular.Server.Context;

#nullable disable

namespace intranet_angular.Server.Migrations
{
    [DbContext(typeof(IntraNetDbContext))]
    [Migration("20241222151146_NoticiaID no slide")]
    partial class NoticiaIDnoslide
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("intranet_angular.Server.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.GrupoDeSlides", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaginaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaginaId");

                    b.ToTable("GrupoDeSlides");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.MidiaNoticia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NoticiaId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NoticiaId");

                    b.ToTable("MidiasNoticias");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Noticia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Noticias");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.NoticiaCategoria", b =>
                {
                    b.Property<int>("NoticiaId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.HasKey("NoticiaId", "CategoriaId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("NoticiasCategorias");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Pagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paginas");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GrupoDeSlidesId")
                        .HasColumnType("int");

                    b.Property<int?>("NoticiaId")
                        .HasColumnType("int");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoDeSlidesId");

                    b.HasIndex("NoticiaId");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Aniversario")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.GrupoDeSlides", b =>
                {
                    b.HasOne("intranet_angular.Server.Entities.Pagina", "Pagina")
                        .WithMany("GruposDeSlides")
                        .HasForeignKey("PaginaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pagina");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.MidiaNoticia", b =>
                {
                    b.HasOne("intranet_angular.Server.Entities.Noticia", "Noticia")
                        .WithMany("Midias")
                        .HasForeignKey("NoticiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Noticia");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Noticia", b =>
                {
                    b.HasOne("intranet_angular.Server.Entities.Usuario", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.NoticiaCategoria", b =>
                {
                    b.HasOne("intranet_angular.Server.Entities.Categoria", "Categoria")
                        .WithMany("NoticiasCategorias")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intranet_angular.Server.Entities.Noticia", "Noticia")
                        .WithMany("NoticiasCategorias")
                        .HasForeignKey("NoticiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Noticia");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Slide", b =>
                {
                    b.HasOne("intranet_angular.Server.Entities.GrupoDeSlides", "GrupoDeSlides")
                        .WithMany("Slides")
                        .HasForeignKey("GrupoDeSlidesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("intranet_angular.Server.Entities.Noticia", "Noticia")
                        .WithMany()
                        .HasForeignKey("NoticiaId");

                    b.Navigation("GrupoDeSlides");

                    b.Navigation("Noticia");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Categoria", b =>
                {
                    b.Navigation("NoticiasCategorias");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.GrupoDeSlides", b =>
                {
                    b.Navigation("Slides");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Noticia", b =>
                {
                    b.Navigation("Midias");

                    b.Navigation("NoticiasCategorias");
                });

            modelBuilder.Entity("intranet_angular.Server.Entities.Pagina", b =>
                {
                    b.Navigation("GruposDeSlides");
                });
#pragma warning restore 612, 618
        }
    }
}
